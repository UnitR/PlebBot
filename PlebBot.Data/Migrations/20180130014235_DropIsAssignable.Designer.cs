// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PlebBot.Data;
using System;

namespace PlebBot.Data.Migrations
{
    [DbContext(typeof(BotContext))]
    [Migration("20180130014235_DropIsAssignable")]
    partial class DropIsAssignable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("PlebBot.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiscordId");

                    b.Property<string>("Name");

                    b.Property<int?>("ServerId");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PlebBot.Data.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiscordId");

                    b.Property<string>("Prefix")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("!");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("PlebBot.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ColourRole");

                    b.Property<string>("DiscordId");

                    b.Property<string>("LastFm");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlebBot.Data.Models.Role", b =>
                {
                    b.HasOne("PlebBot.Data.Models.Server", "Server")
                        .WithMany("Roles")
                        .HasForeignKey("ServerId");
                });
#pragma warning restore 612, 618
        }
    }
}
